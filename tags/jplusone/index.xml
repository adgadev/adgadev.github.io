<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JPlusOne on /adgadev/</title>
    <link>https://adgadev.com/tags/jplusone/</link>
    <description>Recent content in JPlusOne on /adgadev/</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Dec 2020 20:00:00 +0000</lastBuildDate><atom:link href="https://adgadev.com/tags/jplusone/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Finding origin and context of JPA issued SQL statements</title>
      <link>https://adgadev.com/finding-origin-and-context-of-jpa-issued-sql-statemets/</link>
      <pubDate>Wed, 02 Dec 2020 20:00:00 +0000</pubDate>
      
      <guid>https://adgadev.com/finding-origin-and-context-of-jpa-issued-sql-statemets/</guid>
      <description>What problem are we solving here? ORM frameworks like Hibernate and other JPA implementors can significantly simplify development of persistence layer. Introducing entity abstraction level helps to model clean business domain and to hide underlying SQL statements used to achieve persistence of the domain. Such approach is especially useful in large domains, since developer no longer needs to create and maintain all SQL statements used by application. Just a few JPA annotations like @Entity / @ManyToOne / @OneToMany etc.</description>
    </item>
    
  </channel>
</rss>
